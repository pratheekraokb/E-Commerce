1. User Table:

user_id (Primary Key, INT)
username (Unique, VARCHAR(255))
email (Unique, VARCHAR(255))
password_hash (VARCHAR(255))
first_name (VARCHAR(255))
last_name (VARCHAR(255))
city (VARCHAR(255))
state (VARCHAR(255))
nationality (VARCHAR(255))
photo (VARCHAR(255))  # Change from photo_url to photo
phone_number (VARCHAR(20))
is_admin (TINYINT)

2. Product Table:

product_id (Primary Key, INT)
name (VARCHAR(255))
description (TEXT)
mrp_price (DECIMAL(10, 2))
selling_price (DECIMAL(10, 2))
stock_quantity (INT)
category_id (Foreign Key referencing Category Table)
company_id (Foreign Key referencing Company Table)
image (VARCHAR(255))  # Change from image_url to image
Other product-related fields

3. Category Table:
category_id (Primary Key, INT)
name (VARCHAR(255))

4. Subcategory Table:
subcategory_id (Primary Key, INT)
name (VARCHAR(255))
category_id (Foreign Key referencing Category Table)

5. Tag Table:
tag_id (Primary Key, INT)
name (VARCHAR(255))

6. ProductTag Table:
product_tag_id (Primary Key, INT)
product_id (Foreign Key referencing Product Table)
tag_id (Foreign Key referencing Tag Table)

7. Company Table:
company_id (Primary Key, INT)
name (VARCHAR(255))
address (TEXT)
contact_number (VARCHAR(20))
Other company-related fields

8. Cart Table:
cart_id (Primary Key, INT)
user_id (Foreign Key referencing User Table)
created_at (TIMESTAMP)

9. CartItem Table:
cart_item_id (Primary Key, INT)
cart_id (Foreign Key referencing Cart Table)
product_id (Foreign Key referencing Product Table)
quantity (INT)
subtotal (DECIMAL(10, 2))

10. Order Table:
order_id (Primary Key, INT)
user_id (Foreign Key referencing User Table)
order_date (TIMESTAMP)
total_amount (DECIMAL(10, 2))
status (VARCHAR(255))
transaction_id (Unique, VARCHAR(255))

11. OrderItem Table:
order_item_id (Primary Key, INT)
order_id (Foreign Key referencing Order Table)
product_id (Foreign Key referencing Product Table)
quantity (INT)
subtotal (DECIMAL(10, 2))

12. Address Table:
address_id (Primary Key, INT)
user_id (Foreign Key referencing User Table)
city (VARCHAR(255))
state (VARCHAR(255))
zip_code (VARCHAR(20))

13. Comment Table:
comment_id (Primary Key, INT)
user_id (Foreign Key referencing User Table)
product_id (Foreign Key referencing Product Table)
parent_comment_id (Foreign Key referencing Comment Table, for replies)
text (TEXT)
timestamp (TIMESTAMP)

14. ProductImage Table:
image_id (Primary Key, INT)
product_id (Foreign Key referencing Product Table)
image (VARCHAR(255))  # Change from image_url to image




/// MODELS

from django.db import models

class User(models.Model):
    user_id = models.AutoField(primary_key=True)
    username = models.CharField(max_length=255, unique=True)
    email = models.EmailField(max_length=255, unique=True)
    password_hash = models.CharField(max_length=255)
    first_name = models.CharField(max_length=255)
    last_name = models.CharField(max_length=255)
    city = models.CharField(max_length=255)
    state = models.CharField(max_length=255)
    nationality = models.CharField(max_length=255)
    photo = models.ImageField(upload_to='user_images/')
    phone_number = models.CharField(max_length=20)
    is_admin = models.BooleanField()

class Product(models.Model):
    product_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    description = models.TextField()
    mrp_price = models.DecimalField(max_digits=10, decimal_places=2)
    selling_price = models.DecimalField(max_digits=10, decimal_places=2)
    stock_quantity = models.IntegerField()
    category = models.ForeignKey('Category', on_delete=models.CASCADE)
    company = models.ForeignKey('Company', on_delete=models.CASCADE)
    image = models.ImageField(upload_to='product_images/')
    # Other product-related fields

class Category(models.Model):
    category_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)

class Subcategory(models.Model):
    subcategory_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    category = models.ForeignKey(Category, on_delete=models.CASCADE)

class Tag(models.Model):
    tag_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)

class ProductTag(models.Model):
    product_tag_id = models.AutoField(primary_key=True)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    tag = models.ForeignKey(Tag, on_delete=models.CASCADE)

class Company(models.Model):
    company_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    address = models.TextField()
    contact_number = models.CharField(max_length=20)
    # Other company-related fields

class Cart(models.Model):
    cart_id = models.AutoField(primary_key=True)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)

class CartItem(models.Model):
    cart_item_id = models.AutoField(primary_key=True)
    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    quantity = models.IntegerField()
    subtotal = models.DecimalField(max_digits=10, decimal_places=2)

class Order(models.Model):
    order_id = models.AutoField(primary_key=True)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    order_date = models.DateTimeField(auto_now_add=True)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    status = models.CharField(max_length=255)
    transaction_id = models.CharField(max_length=255, unique=True)

class OrderItem(models.Model):
    order_item_id = models.AutoField(primary_key=True)
    order = models.ForeignKey(Order, on_delete=models.CASCADE)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    quantity = models.IntegerField()
    subtotal = models.DecimalField(max_digits=10, decimal_places=2)

class Address(models.Model):
    address_id = models.AutoField(primary_key=True)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    city = models.CharField(max_length=255)
    state = models.CharField(max_length=255)
    zip_code = models.CharField(max_length=20)

class Comment(models.Model):
    comment_id = models.AutoField(primary_key=True)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    parent_comment = models.ForeignKey('Comment', null=True, blank=True, on_delete=models.CASCADE)
    text = models.TextField()
    timestamp = models.DateTimeField(auto_now_add=True)

class ProductImage(models.Model):
    image_id = models.AutoField(primary_key=True)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    image = models.ImageField(upload_to='product_images/')
